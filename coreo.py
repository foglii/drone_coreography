import time

import cflib.crtp
from cflib.crazyflie.swarm import CachedCfFactory
from cflib.crazyflie.swarm import Swarm
import sys

from cflib.crazyflie import Crazyflie
from cflib.crazyflie.log import LogConfig
from cflib.crazyflie.mem import MemoryElement
from cflib.crazyflie.mem import Poly4D
from cflib.crazyflie.syncCrazyflie import SyncCrazyflie
from cflib.crazyflie.syncLogger import SyncLogger
from cflib.utils import uri_helper

# Change uris and sequences according to your setup
# URIs in a swarm using the same radio must also be on the same channel
URI1 = 'radio://0/80/2M/E7E7E7E7E6'
URI2 = 'radio://0/80/2M/E7E7E7E7E7'
URI3 = 'radio://0/80/2M/E7E7E7E7E8'
URI4 = 'radio://0/80/2M/E7E7E7E7E9'
URI5 = 'radio://0/80/2M/E7E7E7E7E5'
URI6 = 'radio://0/80/2M/E7E7E7E7E4'
URI7 = 'radio://0/70/2M/E7E7E7E707'
URI8 = 'radio://0/70/2M/E7E7E7E708'
URI9 = 'radio://0/70/2M/E7E7E7E709'
URI10 = 'radio://0/70/2M/E7E7E7E70A'
# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
drone1=[[3.030000,0.595023,-0.000000,-0.000000,-2.245632,2.236749,-0.833535,0.139072,-0.008905,0.177636,0.000000,0.000000,3.093081,-4.653403,2.499206,-0.581501,0.050083,0.500824,-0.000000,0.000000,-0.015467,0.026027,-0.016051,0.004289,-0.000420,-0.000000,-0.000000,0.000000,0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.517712,0.619774,-1.002746,-0.559393,0.607164,-0.087585,-0.019891,0.003987,-0.283940,0.893434,0.413114,0.368736,-1.507069,0.909454,-0.210750,0.017451,0.500011,0.004398,-0.000277,-0.025658,0.036728,-0.020433,0.005068,-0.000468,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.391815,0.899468,-0.773440,-0.547160,0.190055,0.188272,-0.089179,0.010372,-0.455091,0.726386,0.878113,-0.171321,-0.855310,0.515679,-0.108026,0.007840,0.499656,0.004289,0.005034,-0.016467,-0.003376,0.017234,-0.008604,0.001250,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.206180,1.162259,-0.030856,0.022539,-1.783684,1.415734,-0.388329,0.036362,-0.562917,0.417344,1.123222,-0.167605,-0.679001,0.341058,-0.056136,0.002820,0.489903,0.054193,0.288252,0.424992,-0.954922,0.577334,-0.145872,0.013460,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.051136,1.680348,-0.207384,-0.398351,-0.937866,0.837132,-0.225332,0.020134,-0.605813,0.042787,1.220122,0.001159,-0.602901,0.219216,-0.019662,-0.000552,0.760223,-0.052965,-0.086845,0.407398,-0.449930,0.219715,-0.050202,0.004382,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.257355,1.671857,0.475021,-0.876750,-0.546461,0.553831,-0.136505,0.010640,-0.581913,-0.347529,1.183920,0.253678,-0.598228,0.160279,-0.005341,-0.001352,0.751979,-0.015784,-0.016786,0.123410,-0.158943,0.087332,-0.022080,0.002108,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.520795,1.464864,0.946259,-1.210288,-0.046313,0.395037,-0.144245,0.015717,-0.500736,-0.710303,1.120260,0.758921,-1.315819,0.571479,-0.101912,0.006425,0.747171,-0.012768,0.034981,0.150280,-0.331513,0.193627,-0.042060,0.002946,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,1.153307,-0.701289,-0.793018,0.610885,0.240218,-0.218545,0.044088,-0.002578,-0.011848,0.049150,0.118764,-0.467848,0.501856,-0.242264,0.055007,-0.004781,1.077441,0.557655,-0.376911,-0.801810,0.591044,-0.093258,-0.010619,0.002641,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,1.247520,-0.459625,-0.884940,0.382721,0.234385,-0.097194,-0.003045,0.002702,-0.002655,0.017694,0.022634,-0.128254,0.147953,-0.074010,0.017180,-0.001516,0.976965,0.685542,-0.313317,-0.318004,-0.204797,0.341414,-0.114200,0.011919,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,1.287891,-0.194921,-0.893405,0.575783,-0.600686,0.568443,-0.204787,0.024153,-0.000831,0.006401,0.006990,-0.045155,0.053303,-0.026911,0.006274,-0.000555,0.839338,0.696284,0.029724,0.171474,-1.377529,1.095227,-0.317991,0.032008,0.000000,-0.000000,-0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000]
]
# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
drone2=[[3.030000,-0.449328,-0.000000,0.000000,-1.597490,2.983669,-1.793269,0.446568,-0.040173,0.427392,-0.000000,0.000000,-3.508477,4.292917,-1.989629,0.416104,-0.033241,0.500824,-0.000000,0.000000,-0.015467,0.026027,-0.016051,0.004289,-0.000420,-0.000000,-0.000000,0.000000,0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.011537,-1.069328,0.131680,-0.135350,1.169712,-0.849138,0.221071,-0.019957,0.590789,0.095046,-1.078880,-0.703670,1.340816,-0.569475,0.098833,-0.006349,0.500011,0.004398,-0.000277,-0.025658,0.036728,-0.020433,0.005068,-0.000468,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.201718,-1.048025,-0.405034,0.204275,1.049020,-0.802201,0.211149,-0.019417,0.568758,0.427673,-1.125783,-0.478572,0.771606,-0.214584,0.010860,0.001542,0.499656,0.004289,0.005034,-0.016467,-0.003376,0.017234,-0.008604,0.001250,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.402326,-0.852370,-1.094454,-0.536837,2.255430,-1.296990,0.288047,-0.022962,0.469793,0.842497,-0.663622,-0.235974,-0.835353,0.932663,-0.294394,0.029923,0.489903,0.054193,0.288252,0.424992,-0.954922,0.577334,-0.145872,0.013460,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.763920,-0.902389,-1.497100,0.241120,1.217361,-0.690961,0.136212,-0.009236,0.499429,1.407579,-1.098880,-0.245926,-0.499690,0.639083,-0.200304,0.019738,0.760223,-0.052965,-0.086845,0.407398,-0.449930,0.219715,-0.050202,0.004382,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.884890,-0.381225,-1.778153,0.094449,1.073755,-0.498616,0.078582,-0.003878,0.212424,1.693493,-0.466295,-0.839328,-0.219616,0.484653,-0.149194,0.013813,0.751979,-0.015784,-0.016786,0.123410,-0.158943,0.087332,-0.022080,0.002108,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.910953,0.194553,-1.922499,-0.389823,1.645393,-0.805688,0.150267,-0.009661,-0.084320,1.770683,0.080091,-1.261675,0.195247,0.291274,-0.120144,0.013312,0.747171,-0.012768,0.034981,0.150280,-0.331513,0.193627,-0.042060,0.002946,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.443715,-0.726772,-0.783556,0.684829,0.137980,-0.164614,0.031296,-0.001437,0.006461,-0.006668,-0.111121,0.275201,-0.254963,0.113113,-0.024203,0.002009,1.077441,0.557655,-0.376911,-0.801810,0.591044,-0.093258,-0.010619,0.002641,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.351917,-0.463437,-0.889827,0.416135,0.191540,-0.073918,-0.008818,0.003239,0.001463,-0.003498,-0.012357,0.032036,-0.026803,0.010429,-0.001934,0.000138,0.976965,0.685542,-0.313317,-0.318004,-0.204797,0.341414,-0.114200,0.011919,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.311888,-0.199677,-0.894896,0.601263,-0.632764,0.584949,-0.208662,0.024496,0.000089,0.001208,-0.001061,-0.003978,0.006639,-0.003833,0.000965,-0.000090,0.839338,0.696284,0.029724,0.171474,-1.377529,1.095227,-0.317991,0.032008,0.000000,-0.000000,-0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000]
]
# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
drone3=[[3.030000,-0.144091,-0.000000,0.000000,3.811515,-5.166487,2.593116,-0.576530,0.048177,-0.601292,0.000000,-0.000000,0.344191,0.481301,-0.584795,0.185703,-0.018850,0.500969,-0.000000,0.000000,-0.017540,0.029297,-0.017957,0.004774,-0.000465,-0.000000,-0.000000,0.000000,0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.505665,0.459477,0.866859,0.633230,-1.679788,0.879573,-0.186376,0.014552,-0.305453,-0.967249,0.653783,0.196278,0.397035,-0.481077,0.149660,-0.014821,0.499944,0.004648,0.000077,-0.027369,0.038819,-0.021609,0.005381,-0.000499,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.593628,0.161286,1.178105,0.264858,-1.124736,0.548480,-0.105238,0.007453,-0.109931,-1.115660,0.214106,0.383367,0.564174,-0.608746,0.182397,-0.018022,0.499838,0.004717,0.003861,-0.019996,0.004347,0.012078,-0.007166,0.001105,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.607864,-0.295497,1.121453,0.424494,-0.335295,-0.197440,0.120371,-0.015302,0.112898,-1.158567,-0.611590,-0.355111,2.375798,-1.590699,0.396725,-0.034843,0.489975,0.056027,0.287643,0.414506,-0.938826,0.567964,-0.143454,0.013229,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.815520,-0.762069,1.707566,0.062111,-0.149778,-0.216967,0.106541,-0.012504,0.412085,-1.486682,-0.749937,0.331977,1.315989,-0.929723,0.222173,-0.018338,0.760338,-0.051071,-0.088113,0.393451,-0.425229,0.203874,-0.045793,0.003933,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.628168,-1.280015,1.308094,0.715585,-0.440346,-0.101729,0.069239,-0.007797,0.662456,-1.167649,-1.325951,0.433033,1.188188,-0.776086,0.172120,-0.013347,0.753024,-0.010589,-0.025828,0.082173,-0.072562,0.027979,-0.004805,0.000286,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-0.390042,-1.651589,0.980179,1.558669,-1.618497,0.498386,-0.051102,0.000180,0.838602,-0.688686,-1.797419,-0.031840,2.135120,-1.390332,0.340008,-0.029579,0.752484,0.001997,-0.031829,-0.056989,0.229560,-0.196302,0.060747,-0.006263,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-1.296111,-0.168295,0.987830,-0.202606,0.074397,-0.196589,0.082510,-0.009707,0.005409,-0.034999,0.004681,0.106886,-0.135018,0.067840,-0.015513,0.001341,0.418693,0.211913,0.700611,0.023013,-0.478647,0.196705,-0.023363,0.000194,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-1.219545,-0.479490,0.817508,-0.079784,0.381460,-0.462280,0.158432,-0.017227,0.001189,-0.002482,-0.010097,0.024438,-0.018885,0.006446,-0.000956,0.000045,0.401899,-0.017699,0.765659,-0.144386,0.002492,-0.140649,0.068946,-0.008769,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,-1.087915,-0.641427,0.426322,-0.573101,1.913872,-1.532792,0.461480,-0.048051,0.000546,0.002412,-0.003561,-0.012427,0.022605,-0.013516,0.003465,-0.000326,0.442418,-0.203846,0.603748,-0.538064,1.179485,-0.982009,0.310760,-0.033638,0.000000,-0.000000,-0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000
]]
# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
drone4=[[3.030000,0.299076,0.000000,0.000000,-1.165222,1.195886,-0.468059,0.084101,-0.005955,-0.095609,0.000000,0.000000,-1.554000,2.380117,-1.289480,0.300454,-0.025764,1.000548,-0.000000,0.000000,-0.007968,0.012454,-0.007185,0.001809,-0.000168,-0.000000,-0.000000,0.000000,0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.262195,0.329541,-0.529419,-0.421092,0.582049,-0.227918,0.041950,-0.003324,0.061522,-0.556470,-0.029128,0.063051,0.386025,-0.267932,0.059120,-0.004114,0.999730,0.000550,0.001242,-0.005739,0.007957,-0.004931,0.001396,-0.000147,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.207281,0.514162,-0.483554,-0.756954,1.063042,-0.553237,0.139565,-0.013828,0.074281,-0.652843,-0.042967,0.898289,-0.990467,0.604835,-0.184013,0.020788,1.000527,0.001184,-0.006691,-0.018422,0.057843,-0.049357,0.016965,-0.002055,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.154882,0.821668,-0.415654,-1.811670,1.142091,-0.003578,-0.101804,0.015276,0.023013,-0.845874,0.656852,3.373361,-3.992360,1.644321,-0.293742,0.019461,1.010322,-0.046249,-0.289814,-0.472427,1.025537,-0.617669,0.156118,-0.014428,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.821833,0.729897,-1.748518,0.129260,-0.044506,0.302939,-0.124179,0.013875,-0.909370,0.092142,1.805419,-0.066141,-0.790945,0.264526,-0.013572,-0.002289,0.739786,0.060469,0.086393,-0.457051,0.524599,-0.263164,0.061433,-0.005459,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.632006,1.285351,-1.341052,-0.753368,0.571516,0.001289,-0.038614,0.004488,-0.873884,-0.513218,1.784309,0.329484,-0.840939,0.213858,-0.002267,-0.002496,0.748302,0.026242,0.014723,-0.186050,0.252721,-0.141283,0.035896,-0.003425,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.399891,1.683968,-1.101165,-1.952816,2.647422,-1.209571,0.240559,-0.017534,-0.752335,-1.064757,1.693360,1.146195,-2.027489,0.900761,-0.165895,0.010983,0.753462,0.022647,-0.041817,-0.226817,0.424472,-0.205609,0.035888,-0.001819,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.341902,-0.310511,0.609545,1.195578,-1.391398,0.500343,-0.073908,0.003762,-0.016331,0.065279,0.161071,-0.625471,0.668754,-0.322538,0.073243,-0.006370,0.902456,-0.757123,-0.298180,0.642211,0.054494,-0.191646,0.055454,-0.004809,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.388538,-0.522464,0.748363,0.245566,0.023969,-0.288779,0.119042,-0.013810,-0.003199,0.024347,0.027855,-0.175522,0.208162,-0.106028,0.024956,-0.002228,1.020878,-0.653697,-0.450162,0.373654,0.326341,-0.269637,0.062432,-0.004751,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[3.030000,0.513982,-0.652604,0.409250,-0.487182,1.817516,-1.485486,0.450654,-0.047106,-0.001062,0.011182,0.009159,-0.074075,0.089944,-0.045945,0.010780,-0.000958,1.117881,-0.480358,-0.630286,0.293086,0.295767,-0.165361,0.019799,0.000493,0.000000,-0.000000,-0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000

]]
# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
drone5=[[2.220000,-0.303307,-0.000000,0.000000,1.433503,-1.866911,1.078747,-0.323408,0.040105,0.283700,-0.000000,0.000000,0.534886,-1.792996,1.541040,-0.527967,0.064947,0.996617,0.000000,-0.000000,0.190488,-0.468813,0.422971,-0.165155,0.023562,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,0.147030,-0.526549,-0.047771,1.346147,-3.730693,3.569047,-1.369029,0.184262,-0.260194,0.200184,0.334051,0.244100,0.769781,-1.698362,0.867531,-0.135643,0.992512,-0.021921,0.191786,0.764353,-2.769075,2.559263,-0.948319,0.125273,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,0.390936,0.816829,-1.046365,1.187012,-2.351008,1.803006,-0.560982,0.061673,-0.578079,-0.265524,1.380888,-2.101061,3.496021,-2.757150,0.938279,-0.115711,0.764953,-0.082652,-0.243130,1.291008,-1.832799,1.172403,-0.354608,0.041472,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,-0.611461,-0.017579,0.056850,-1.155327,1.107050,-0.098129,-0.154222,0.036301,0.462913,-0.439482,-0.071545,0.006946,0.151921,-0.051203,-0.011708,0.004754,0.781459,0.122379,0.195900,0.456920,-0.396703,-0.172119,0.172513,-0.030885,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,-0.227162,0.207832,-0.720691,0.952533,-2.242734,2.116950,-0.807698,0.108935,0.001497,-0.028650,-0.017778,0.311803,-0.536620,0.379983,-0.122752,0.014976,0.544529,-0.583343,0.556542,-0.055070,0.525449,-0.534417,0.170677,-0.017168,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000]]
# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
drone6=[[2.220000,0.197486,-0.000000,-0.000000,1.745603,-3.443179,2.367627,-0.703016,0.077301,-0.240546,0.000000,-0.000000,2.980500,-4.947947,3.348151,-1.067230,0.131786,0.999806,0.000000,-0.000000,0.056469,-0.168392,0.175296,-0.076455,0.011906,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,-0.281571,-0.013984,0.251141,-0.262847,1.684190,-1.742853,0.640302,-0.080562,-0.006065,-0.710140,0.257729,2.554378,-5.668686,4.470363,-1.499721,0.182986,0.991803,-0.004301,0.202861,0.592338,-2.499289,2.387209,-0.898940,0.120005,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,0.218074,-1.088556,-0.322787,0.422428,0.388912,-0.236724,0.009292,0.006671,0.099967,1.147844,-0.448363,-0.076335,-0.411369,0.197099,0.028252,-0.015483,0.762133,-0.086651,-0.200002,1.361307,-2.168556,1.521470,-0.496019,0.061118,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,0.399336,0.591513,-0.969773,-0.086261,0.479353,0.077074,-0.166577,0.034342,-0.493094,0.128887,1.204975,-0.995395,-0.256326,0.571466,-0.228220,0.029688,0.711602,-0.240921,-0.304770,0.506713,0.076470,-0.501266,0.290631,-0.049588,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000],
[2.220000,0.974342,0.233147,-0.739400,0.713308,-1.747853,1.738855,-0.680128,0.092921,-0.000285,-0.013169,-0.010911,0.191754,-0.343592,0.249933,-0.082263,0.010174,0.659461,0.844194,0.223898,-2.077988,3.628983,-3.120241,1.218673,-0.173369,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000]]

# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
figure8_1=[[4.200000,0.436550,0.000000,-0.000000,-2.277598,2.417960,-0.939501,0.158453,-0.009823,0.311736,-0.000000,0.000000,0.476357,-0.902670,0.491394,-0.105320,0.007874,0.012440,0.000000,0.000000,0.024346,-0.011788,0.001352,0.000174,-0.000032,-0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,-0.449914,-0.591868,1.167036,0.428802,-0.821013,0.293713,-0.039549,0.001711,0.350495,-1.085656,-0.955792,1.689428,-0.508620,-0.034156,0.030546,-0.003008,0.138603,0.042894,0.000991,-0.023569,0.022652,-0.008848,0.001572,-0.000105,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,0.153817,1.172877,-0.368171,-1.524995,1.140982,-0.286509,0.026121,-0.000409,-0.492381,0.358045,1.206577,-0.381156,-0.628342,0.390619,-0.078624,0.005336,0.280522,0.038524,-0.001517,-0.019376,0.021795,-0.009124,0.001682,-0.000115,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,0.157916,-1.126525,-0.383039,1.358529,-0.487612,-0.014777,0.026655,-0.002821,0.495634,0.369808,-1.220220,-0.415446,0.992911,-0.401340,0.062324,-0.003324,0.420385,0.037325,-0.001635,-0.021711,0.025916,-0.011212,0.002101,-0.000144,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,-0.448708,0.673386,1.166163,-0.667801,-0.617346,0.492188,-0.114053,0.008755,-0.349299,-1.059790,0.951562,1.612399,-1.886081,0.721903,-0.120441,0.007494,0.556822,0.040816,0.006547,-0.022889,0.015628,-0.004142,0.000423,-0.000010,0.000000,-0.000000,0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000]]

# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
figure8_2=[[4.200000,-0.471752,-0.000000,0.000000,0.595609,-0.269521,-0.025472,0.025312,-0.002842,0.217864,0.000000,-0.000000,-2.184605,2.517760,-1.048368,0.187965,-0.012319,0.012440,0.000000,0.000000,0.024346,-0.011788,0.001352,0.000174,-0.000032,-0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,-0.082751,1.299652,0.252624,-1.871082,1.041823,-0.192679,0.006772,0.000850,-0.560866,0.027058,1.482017,-0.462755,-0.461839,0.272382,-0.049549,0.002979,0.138603,0.042894,0.000991,-0.023569,0.022652,-0.008848,0.001572,-0.000105,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,0.349529,-0.857538,-0.865010,0.937296,0.151919,-0.272765,0.069952,-0.005474,0.384026,0.834986,-0.936943,-1.147598,1.342722,-0.465127,0.066542,-0.003368,0.280522,0.038524,-0.001517,-0.019376,0.021795,-0.009124,0.001682,-0.000115,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,-0.499447,0.325268,1.213440,-0.588514,-0.299504,0.218569,-0.041593,0.002503,-0.110997,-1.121363,0.277035,1.284570,-0.821648,0.150444,-0.001560,-0.001207,0.420385,0.037325,-0.001635,-0.021711,0.025916,-0.011212,0.002101,-0.000144,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,0.527012,0.705317,-1.405269,-1.433743,2.310812,-1.015074,0.186501,-0.012518,-0.215677,1.131724,0.542490,-1.441558,0.458577,0.046808,-0.035424,0.003635,0.556822,0.040816,0.006547,-0.022889,0.015628,-0.004142,0.000423,-0.000010,0.000000,-0.000000,0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000]]
# duration,x^0,x^1,x^2,x^3,x^4,x^5,x^6,x^7,y^0,y^1,y^2,y^3,y^4,y^5,y^6,y^7,z^0,z^1,z^2,z^3,z^4,z^5,z^6,z^7,yaw^0,yaw^1,yaw^2,yaw^3,yaw^4,yaw^5,yaw^6,yaw^7
figure8_3=[[
4.200000,0.056843,0.000000,0.000000,1.509020,-1.939282,0.872433,-0.166030,0.011420,-0.517725,-0.000000,0.000000,1.598631,-1.477476,0.494441,-0.070416,0.003573,0.012440,0.000000,0.000000,0.024346,-0.011788,0.001352,0.000174,-0.000032,-0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,0.528116,-0.621776,-1.411938,1.179380,0.041830,-0.205471,0.051479,-0.003815,0.212412,1.125581,-0.531663,-1.434257,1.188722,-0.327127,0.035165,-0.001066,0.138603,0.042894,0.000991,-0.023569,0.022652,-0.008848,0.001572,-0.000105,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,-0.504017,-0.258351,1.230672,0.370698,-1.050595,0.455294,-0.076337,0.004497,0.110583,-1.140318,-0.276769,1.326154,-0.485893,-0.023229,0.030509,-0.003253,0.280522,0.038524,-0.001517,-0.019376,0.021795,-0.009124,0.001682,-0.000115,-0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,0.350814,0.902702,-0.868152,-1.104835,1.176956,-0.371210,0.046451,-0.001870,-0.383360,0.837707,0.929134,-1.151584,0.142727,0.117905,-0.035851,0.002804,0.420385,0.037325,-0.001635,-0.021711,0.025916,-0.011212,0.002101,-0.000144,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000,0.000000,-0.000000],
[4.200000,-0.078281,-1.226482,0.241546,1.647455,-1.242652,0.347122,-0.041685,0.001746,0.567450,0.056101,-1.500073,-0.539457,1.797675,-0.913592,0.181273,-0.012797,0.556822,0.040816,0.006547,-0.022889,0.015628,-0.004142,0.000423,-0.000010,0.000000,-0.000000,0.000000,-0.000000,-0.000000,-0.000000,0.000000,-0.000000
]]



seq_args_ = {
    URI1: [1,drone1],
    URI2: [2,drone2],
    URI3: [3,drone3],
    URI4: [4,drone4],
   # URI5: [5,drone5],
    #URI6: [6,drone6],
    #URI7: [sequence7],
    #URI8: [sequence8],
    #URI9: [sequence9],
    #URI10: [sequence10],
}

seq_argss_ = {
    URI1: [1,30.3],
    URI2: [2,30.3],
    URI3: [3,30.3],
    URI4: [4,30.3],
    #URI5: [5,11.1],
    #URI6: [6,11.1],
    #URI7: [sequence7],
    #URI8: [sequence8],
    #URI9: [sequence9],
    #URI10: [sequence10],
}

# List of URIs, comment the one you do not want to fly
uris = {
    URI1,
    URI2,
    URI3,
    URI4,
   # URI5,
   # URI6,
   # URI7,
   # URI8,
   # URI9,
   # URI10
}

#######
def activate_mellinger_controller(scf):
    scf.cf.param.set_value('stabilizer.controller', '2')


def upload_trajectory(scf, trajectory_id, trajectory):
    """Upload one trajectory to one Crazyflie"""
    try:
        mems = scf.cf.mem.get_mems(MemoryElement.TYPE_TRAJ)
        if not mems:
            print(f"[{scf.cf.link_uri}] No trajectory memory found!")
            return
        trajectory_mem = mems[0]
        trajectory_mem.trajectory = []

        total_duration = 0
        for row in trajectory:
            duration = row[0]
            x = Poly4D.Poly(row[1:9])
            y = Poly4D.Poly(row[9:17])
            z = Poly4D.Poly(row[17:25])
            yaw = Poly4D.Poly(row[25:33])
            trajectory_mem.trajectory.append(Poly4D(duration, x, y, z, yaw))
            total_duration += duration

        if not trajectory_mem.write_data_sync():
            print(f"[{scf.cf.link_uri}] Upload failed.")
            return

        scf.cf.high_level_commander.define_trajectory(trajectory_id, 0, len(trajectory))
        print(f"[{scf.cf.link_uri}] Trajectory uploaded ({len(trajectory)} segments, {total_duration:.1f}s)")
        print(total_duration)
        return total_duration

    except Exception as e:
        print(f"[{scf.cf.link_uri}] ERROR uploading trajectory: {e}")
        

def landd(scf):
    commander = scf.cf.high_level_commander
    commander.land(0.0,4.0)
    time.sleep(4.0)
    commander.stop()
def run_trajectory(scf, trajectory_id, duration):
    try:
        print('run_trajectory function')
        """Execute a defined trajectory"""
        commander = scf.cf.high_level_commander

        commander.takeoff(0.5, 2.0)
        time.sleep(3.0)
        commander.start_trajectory(trajectory_id, 1.0, False)
        '''print(f"[{scf.cf.link_uri}] Running trajectory {trajectory_id} for {duration:.1f}s")'''
        time.sleep(duration)
        commander.land(0.0, 2.0)
        time.sleep(3.0)
        commander.stop()
    except Exception as e:
        print(f"[{scf.cf.link_uri}] ERROR uploading trajectory: {e}")
        commander.land(0.0, 2.0)


def wait_for_param_download(scf):
    while not scf.cf.param.is_updated:
        time.sleep(0.5)
    print(f"[{scf.cf.link_uri}] Parameters ready")


def light_check(scf):
    scf.cf.param.set_value('led.bitmask', 255)
    time.sleep(1)
    scf.cf.param.set_value('led.bitmask', 0)


# --- Swarm execution ---
if __name__ == '__main__':
    cflib.crtp.init_drivers()

    factory = CachedCfFactory(rw_cache='./cache')

    with Swarm(uris, factory=factory) as swarm:
        try:
            swarm.parallel_safe(wait_for_param_download)
            swarm.parallel_safe(light_check)
            swarm.reset_estimators()
            swarm.parallel_safe(activate_mellinger_controller)

            # Upload trajectories to each Crazyflie
            durations = swarm.parallel(upload_trajectory, args_dict=seq_args_)
            durations=[30.3,30.3,30.3,30.3]
            print("Durations:", durations)
              
            # Wait before flight
            time.sleep(3.0)

            # Run trajectories
            '''run_args = {uri: [seq_args_[uri][0], durations[uri]] for uri in seq_args_}'''
            swarm.parallel_safe(run_trajectory, args_dict=seq_argss_)

        except KeyboardInterrupt:
            print("Emergency stop triggered by user.")
            swarm.parallel_safe(landd)
        except Exception as e:
            print(f"Error: {e}")
            swarm.parallel_safe(landd)

""" def activate_mellinger_controller(cf):
    cf.param.set_value('stabilizer.controller', '2')


def upload_trajectory(cf, trajectory_id, trajectory):
    try:
        print('hello')
        trajectory_mem = cf.cf.mem.get_mems(MemoryElement.TYPE_TRAJ)[0]
        trajectory_mem.trajectory = []

        total_duration = 0
        for row in trajectory:
            duration = row[0]
            x = Poly4D.Poly(row[1:9])
            y = Poly4D.Poly(row[9:17])
            z = Poly4D.Poly(row[17:25])
            yaw = Poly4D.Poly(row[25:33])
            trajectory_mem.trajectory.append(Poly4D(duration, x, y, z, yaw))
            total_duration += duration

        upload_result = trajectory_mem.write_data_sync()
        print('Uploaded')
        if not upload_result:
            print('Upload failed, aborting!')
            sys.exit(1)
        cf.cf.high_level_commander.define_trajectory(trajectory_id, 0, len(trajectory_mem.trajectory))
        print(total_duration)
        return total_duration
    except Exception as e:
        print(e)

#####
def activate_led_bit_mask(scf):
    scf.cf.param.set_value('led.bitmask', 255)

def deactivate_led_bit_mask(scf):
    scf.cf.param.set_value('led.bitmask', 0)

def light_check(scf):
    activate_led_bit_mask(scf)
    time.sleep(2)
    deactivate_led_bit_mask(scf)

def wait_for_param_download(scf):
    while not scf.cf.param.is_updated:
        time.sleep(1.0)
    print('Parameters downloaded for', scf.cf.link_uri)


def arm(scf):
    scf.cf.platform.send_arming_request(True)
    time.sleep(1.0)


def take_off(cf, position):
    take_off_time = 1.0
    sleep_time = 0.1
    steps = int(take_off_time / sleep_time)
    vz = position[2] / take_off_time

    print(vz)

    for i in range(steps):
        cf.commander.send_velocity_world_setpoint(0, 0, vz, 0)
        time.sleep(sleep_time)


def land(cf, position):
    landing_time = 1.0
    sleep_time = 0.1
    steps = int(landing_time / sleep_time)
    vz = -position[2] / landing_time

    print(vz)

    for _ in range(steps):
        cf.commander.send_velocity_world_setpoint(0, 0, vz, 0)
        time.sleep(sleep_time)

    cf.commander.send_stop_setpoint()
    # Hand control over to the high level commander to avoid timeout and locking of the Crazyflie
    cf.commander.send_notify_setpoint_stop()

    # Make sure that the last packet leaves before the link is closed
    # since the message queue is not flushed before closing
    time.sleep(0.1)


def run_sequence(scf, sequence):
    try:
        cf=scf.cf

        take_off(scf, sequence[0])
        for position in sequence:
            print('Setting position {}'.format(position))
            end_time = time.time() + position[3]
            while time.time() < end_time:
                cf.commander.send_position_setpoint(position[0],
                                                    position[1],
                                                    position[2], 0)
                time.sleep(0.1)
        land(scf, sequence[-1])
    except Exception as e:
        print(e)

def run_sequencee(scf, trajectory_id,figure8):
    try:
        print('run function')
        commander = scf.cf.high_level_commander
        relative_yaw=False
        print('second print')
        duration=21
        #duration = upload_trajectory(cf, trajectory_id, figure8)
        print(duration)
        print('The sequence is {:.1f} seconds long'.format(duration))
        # Arm the Crazyflie
        #cf.platform.send_arming_request(True)
        print('third print')
        time.sleep(1.0)

        takeoff_yaw = 3.14 / 2 if relative_yaw else 0.0
        commander.takeoff(0.5, 2.0, yaw=takeoff_yaw)
        time.sleep(3.0)
        commander.start_trajectory(trajectory_id, 1.0, True)
        time.sleep(duration)
        commander.land(0.0, 2.0)
        time.sleep(2)
        commander.stop()
    except Exception as e:
        print(e)


if __name__ == '__main__':
    # logging.basicConfig(level=logging.DEBUG)
    cflib.crtp.init_drivers()

    factory = CachedCfFactory(rw_cache='./cache')
    with Swarm(uris, factory=factory) as swarm:
        try:
            # If the copters are started in their correct positions this is
            # probably not needed. The Kalman filter will have time to converge
            # any way since it takes a while to start them all up and connect. We
            # keep the code here to illustrate how to do it.
            

            # The current values of all parameters are downloaded as a part of the
            # connections sequence. Since we have 10 copters this is clogging up
            # communication and we have to wait for it to finish before we start
            # flying.
            swarm.parallel_safe(light_check)

            durat=swarm.parallel_safe(upload_trajectory,args_dict=seq_args_)
            
            print(durat)
            #swarm.parallel(wait_for_param_download)
            time.sleep(5)

            swarm.reset_estimators()
        
        

            swarm.parallel_safe(activate_mellinger_controller)
            
            
        
            
            
            swarm.parallel_safe(arm)
            #swarm.parallel(run_sequence,args_dict=seq_args_)
            swarm.parallel_safe(run_sequencee,args_dict=seq_args_)

        # swarm.parallel(run_sequence, args_dict=seq_args)
        except Exception as e:
                print(f"Error occurred: {e}")
                swarm.parallel_safe(emergency_stop())


# --- Helper functions ---
 """
